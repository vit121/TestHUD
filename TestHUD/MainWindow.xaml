<Window x:Class="TestHUD.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestHUD"
        mc:Ignorable="d"
        xmlns:converters="clr-namespace:TestHUD.Converters"
        xmlns:CustomEase="clr-namespace:TestHUD.Helpers"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
        xmlns:customControls="clr-namespace:TestHUD.CustomControls"
        Title="MainWindow" Height="550" Width="1100">
    <Window.Resources>
        <converters:NegativeAngleConverter x:Key="NegativeAngleConverter"></converters:NegativeAngleConverter>
    </Window.Resources>
    <Grid
        Background="DarkSlateGray">
        <StackPanel
            Margin="40"
            Height="120"
            VerticalAlignment="Bottom"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <!-- Part 1: Compass -->
            <Grid
                DataContext="{Binding Compass}"
                Background="Black"
                Width="256">
                <Image Name="image_tankcompass_pad"
                       VerticalAlignment="Center"
                       Margin="0,0,0,0"
                       Width="256" Height="120"/>
                <Grid
                    HorizontalAlignment="Left">
                    <Image Name="image_tankcompass_compass"
                        RenderTransformOrigin="0.5, 0.5"
                        Margin="0,0,0,0"
                        Width="120" Height="120">
                        <Image.RenderTransform>
                            <RotateTransform Angle="{Binding CourseAngle, Converter={StaticResource NegativeAngleConverter}}" />
                        </Image.RenderTransform>
                        <Image.Style>
                            <Style>
                                <Style.Triggers>
                                    <!--<DataTrigger Binding="{Binding IsAnimating}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                                                            To="{Binding RotationAmplitude}" Duration="{Binding RotationPeriod}" RepeatBehavior="Forever">
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                                                            To="{Binding RotationAmplitude}" Duration="{Binding RotationPeriod}" RepeatBehavior="Forever">
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>-->
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                        <!--<Image.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                        Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                                                        To="{Binding RotationAmplitude}" Duration="{Binding RotationPeriod}" RepeatBehavior="Forever">
                                                    <DoubleAnimation.EasingFunction>
                                                            <CustomEase:CustomTestFunction EasingMode="EaseIn"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                </EventTrigger>
                            </Image.Triggers>-->
                    </Image>
                    <Image Name="image_tankcompass_tower"
                        Margin="0,0,0,0"
                        RenderTransformOrigin="0.5, 0.5"
                        Width="72" Height="72">
                        <Image.RenderTransform>
                            <RotateTransform Angle="{Binding TowerAngle}" />
                        </Image.RenderTransform>
                    </Image>
                </Grid>
                <StackPanel
                    Margin="0,13,38,0"
                    Width="60"
                    HorizontalAlignment="Right">
                    <TextBlock FontSize="36" 
                                    Foreground="White"
                                    FontWeight="Bold"
                                    HorizontalAlignment="Center"
                                    Text="{Binding CourseAngle}"/>
                    <TextBlock FontSize="36" 
                                    Foreground="White"
                                    FontWeight="Bold"
                                    HorizontalAlignment="Center"
                                    Text="{Binding TowerAngle}"/>
                </StackPanel>
            </Grid>
            <!-- Part 2: Speed -->
            <Grid
                Background="Black"
                Width="256"
                Margin="20,0,0,0">
                <Grid
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130" />
                        <ColumnDefinition Width="116" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        FontSize="72" 
                        Foreground="White"
                        FontWeight="Bold"
                        HorizontalAlignment="Right"
                        Text="00"/>
                    <StackPanel
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,0">
                        <TextBlock 
                            FontSize="20" 
                            Foreground="Gray"
                            FontWeight="Bold"
                            Text="speed"/>
                        <TextBlock
                            Margin="0,-10,0,0"
                            FontSize="28" 
                            Foreground="White"
                            FontWeight="Bold"
                            Text="km/h"/>
                    </StackPanel>
                </Grid>
            </Grid>

            <!-- Part 3: RPM -->
            <Grid
                Background="Black"
                Width="120"
                Margin="20,0,0,0">
                <!--<Canvas Margin="60">
                    <Path Stroke="White">
                        <Path.Data>
                            <EllipseGeometry RadiusX="50" RadiusY="50"/>
                        </Path.Data>
                    </Path>
                    <Path Stroke="LightBlue" StrokeThickness="10">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="-50,20">
                                    <ArcSegment Point="30,28" Size="50,50"
                                    IsLargeArc="True" SweepDirection="Clockwise"/>
                                </PathFigure>
                                <PathGeometry.Transform>
                                    <RotateTransform Angle="0"/>
                                </PathGeometry.Transform>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>-->
                <!--<Grid>
                    <ed:Arc x:Name="ARC1" 
                        Height="100" Width="100"
                        Stretch="None"
                        ArcThickness="45"
                        ArcThicknessUnit="Pixel"
                        EndAngle="90">
                        <ed:Arc.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF16A8D8" Offset="1"/>
                                <GradientStop Color="#FF5DDBE8"/>
                                <GradientStop Color="#FF127EA1" Offset="0.981"/>
                            </LinearGradientBrush>
                        </ed:Arc.Fill>
                    </ed:Arc>
                    <TextBlock 
                        Text="{Binding ElementName=SLD, 
                        Path=Value, StringFormat={}{0:#}%}"
                        FontSize="50" VerticalAlignment="Center" 
                        TextAlignment="Center" Foreground="DarkMagenta"/>
                </Grid>
                <ed:Arc x:Name="ARC2" Grid.Column="1"
                    Fill="Red" 
                    Height="100" Width="100"
                    Stretch="None"
                    ArcThickness="10"
                    ArcThicknessUnit="Pixel"
                    EndAngle="0" />
                <Slider Height="20" Grid.Column="1"
                    VerticalAlignment="Center"
                    Maximum="100" Name="SLD"
                    ValueChanged="Slider_ValueChanged"/>-->

                <!--<Path Stroke="Red" StrokeThickness="10">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigureCollection>
                                    <PathFigure StartPoint="20,70">
                                        <PathFigure.Segments>
                                            <PathSegmentCollection>
                                                <ArcSegment Size="10,10" RotationAngle="0" IsLargeArc="True" SweepDirection="Clockwise" Point="100,70" />
                                            </PathSegmentCollection>
                                        </PathFigure.Segments>
                                    </PathFigure>
                                </PathFigureCollection>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>-->
            </Grid>
            <!-- Part 4: Damages -->
            <Grid
                Background="Black"
                Width="256"
                Margin="20,0,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <customControls:DamageItemView 
                        Grid.Row="0"
                        Grid.Column="0"
                        ItemDamageColor="Red"
                        Source="{StaticResource image_isEngineOverheat}" />
                    <customControls:DamageItemView 
                        Grid.Row="0"
                        Grid.Column="1"
                        ItemDamageColor="Red"
                        Source="{StaticResource image_isOilLowPressure}"/>
                    <customControls:DamageItemView 
                        Grid.Row="0"
                        Grid.Column="2"
                        ItemDamageColor="OrangeRed"
                        Source="{StaticResource image_isEngineDamaged}"/>
                    <customControls:DamageItemView 
                        Grid.Row="1"
                        Grid.Column="0"
                        ItemDamageColor="LightSkyBlue"
                        Source="{StaticResource image_isHeadLightsOn}"/>
                    <customControls:DamageItemView 
                        Grid.Row="1"
                        Grid.Column="1"
                        ItemDamageColor="Red"
                        Source="{StaticResource image_isAccumLowPower}"/>
                </Grid>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
