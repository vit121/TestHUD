<Window x:Class="TestHUD.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestHUD"
        mc:Ignorable="d"
        xmlns:converters="clr-namespace:TestHUD.Converters"
        xmlns:CustomEase="clr-namespace:TestHUD.Helpers"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
        xmlns:customControls="clr-namespace:TestHUD.CustomControls"
        Title="MainWindow" Height="550" Width="1100">
    <Window.Resources>
        <converters:NegativeAngleConverter x:Key="NegativeAngleConverter"></converters:NegativeAngleConverter>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

        <!--<Storyboard
            x:Key="storyboardCompass">
            <DoubleAnimation
                    Changed="testDoubleAnimation_Changed"
                    Completed="DoubleAnimation_Completed"
                    Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                    To="{Binding Compass.RotationAmplitude}"
                    Duration="{Binding Compass.RotationPeriod}"
                    AutoReverse="False"
                    RepeatBehavior="Forever">
                <DoubleAnimation.EasingFunction>
                    --><!--<CustomEase:CustomTestFunction EasingMode="EaseIn"/>--><!--
                    <SineEase EasingMode="EaseInOut" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>-->
    </Window.Resources>
    <Grid
        Background="{StaticResource ColorBackgroundMain}">
        <StackPanel
            Margin="0,120,0,0"
            VerticalAlignment="Top"
            HorizontalAlignment="Center">
            <CheckBox
                Content="Компас и направление башни"
                FontSize="36"
                IsChecked="{Binding Compass.IsVisible}" />
            <CheckBox
                Content="Скорость"
                FontSize="36"
                IsChecked="{Binding Speed.IsVisible}" />
            <CheckBox
                Content="Обороты"
                FontSize="36"
                IsChecked="{Binding Rpm.IsVisible}" />
            <CheckBox
                Content="Повреждения"
                FontSize="36"
                IsChecked="{Binding IsVisible_Damages}" />
        </StackPanel>
        <StackPanel
            Margin="40"
            Height="120"
            VerticalAlignment="Bottom"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <!-- Part 1: Compass -->
            <Grid
                DataContext="{Binding Compass}"
                Visibility="{Binding IsVisible, Converter={StaticResource booleanToVisibilityConverter}}"
                Background="Black"
                Width="256">
                <Image 
                    Source="{StaticResource image_tankcompass_pad}"
                    VerticalAlignment="Center"
                    Margin="0,0,0,0"
                    Width="256" Height="120"/>
                <Grid
                    HorizontalAlignment="Left">
                    <Image 
                        Source="{StaticResource image_tankcompass_compass}"
                        RenderTransformOrigin="0.5, 0.5"
                        Margin="0,0,0,0"
                        Width="120" Height="120">
                        <Image.RenderTransform>
                            <RotateTransform Angle="{Binding CourseAngle, Converter={StaticResource NegativeAngleConverter}}" />
                        </Image.RenderTransform>
                        <Image.Style>
                            <Style>
                                <Style.Triggers>
                                    <!--<DataTrigger Binding="{Binding IsAnimating}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                                                            To="{Binding RotationAmplitude}" Duration="{Binding RotationPeriod}" RepeatBehavior="Forever">
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                                                            To="{Binding RotationAmplitude}" Duration="{Binding RotationPeriod}" RepeatBehavior="Forever">
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>-->
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                        <!--Binding.TargetUpdated-->
                        <!-- <BackEase Amplitude="1" EasingMode="EaseInOut" /> -->
                        <!--<SineEase EasingMode="EaseInOut" /> -->
                        <!--<Image.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard x:Name="storyboardCompass">
                                    <Storyboard>
                                        <DoubleAnimation
                                            x:Name="testDoubleAnimation" 
                                            Changed="testDoubleAnimation_Changed"
                                            Completed="DoubleAnimation_Completed"
                                            Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                                            To="{Binding RotationAmplitude}"
                                            Duration="{Binding RotationPeriod}"
                                            AutoReverse="False"
                                            FillBehavior="Stop"
                                            IsAdditive="True"
                                            RepeatBehavior="Forever">
                                            <DoubleAnimation.EasingFunction>
                                                <CustomEase:CustomTestFunction EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Image.Triggers>-->
                        <!--<CustomEase:CustomTestFunction EasingMode="EaseInOut"/>-->
                    </Image>
                    <Image
                        Source="{StaticResource image_tankcompass_tower}"
                        Margin="0,0,0,0"
                        RenderTransformOrigin="0.5, 0.5"
                        Width="72" Height="72">
                        <Image.RenderTransform>
                            <RotateTransform Angle="{Binding TowerAngle}" />
                        </Image.RenderTransform>
                    </Image>
                </Grid>
                <StackPanel
                    Margin="0,13,38,0"
                    Width="60"
                    HorizontalAlignment="Right">
                    <TextBlock FontSize="36" 
                                    Foreground="White"
                                    FontWeight="Bold"
                                    HorizontalAlignment="Center"
                                    Text="{Binding CourseAngle, NotifyOnTargetUpdated=True}"/>
                    <TextBlock FontSize="36" 
                                    Foreground="White"
                                    FontWeight="Bold"
                                    HorizontalAlignment="Center"
                                    Text="{Binding TowerAngle}"/>
                </StackPanel>
            </Grid>
            <!-- Part 2: Speed -->
            <Grid
                DataContext="{Binding Speed}"
                Visibility="{Binding IsVisible, Converter={StaticResource booleanToVisibilityConverter}}"
                Background="Black"
                Width="256"
                Margin="20,0,0,0">
                <Grid
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130" />
                        <ColumnDefinition Width="116" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        FontSize="72" 
                        Foreground="White"
                        FontWeight="Bold"
                        HorizontalAlignment="Right"
                        Text="{Binding Speed}"/>
                    <StackPanel
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,0">
                        <TextBlock 
                            FontSize="20" 
                            Foreground="Gray"
                            FontWeight="Bold"
                            Text="скорость"/>
                        <TextBlock
                            Margin="0,-10,0,0"
                            FontSize="28" 
                            Foreground="White"
                            FontWeight="Bold"
                            Text="{Binding SpeedUnits}"/>
                    </StackPanel>
                </Grid>
            </Grid>
            <!-- Part 3: RPM -->
            <Grid
                DataContext="{Binding Rpm}"
                Visibility="{Binding IsVisible, Converter={StaticResource booleanToVisibilityConverter}}"
                Background="Black"
                Width="120"
                Margin="20,0,0,0">
                <Grid>
                    <ed:Arc 
                        x:Name="ARC1" 
                        Height="80" 
                        Width="80"
                        Stretch="None"
                        ArcThickness="10"
                        ArcThicknessUnit="Pixel"
                        Fill="Gray"
                        StartAngle="-140"
                        EndAngle="140">
                    </ed:Arc>
                    <ed:Arc 
                        x:Name="ARC2" 
                        Fill="White" 
                        Height="80"
                        Width="80"
                        Stretch="None"
                        ArcThickness="10"
                        ArcThicknessUnit="Pixel"
                        StartAngle="0"
                        EndAngle="280"
                        RenderTransformOrigin="0.5, 0.5">
                        <ed:Arc.RenderTransform>
                            <RotateTransform Angle="-140" />
                        </ed:Arc.RenderTransform>
                    </ed:Arc>
                    <!--<TextBlock 
                        Text="{Binding ElementName=SLD, 
                        Path=Value, StringFormat={}{0:#}%}"
                        FontSize="24" VerticalAlignment="Center" 
                        TextAlignment="Center" Foreground="DarkMagenta"/>-->
                </Grid>
                <TextBlock 
                    Text="об/мин"
                    FontSize="14"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Foreground="Gray"/>
                <Grid
                    Margin="0,0,0,14"
                    VerticalAlignment="Bottom"
                    Width="14"
                    Height="14">
                    <Ellipse
                        Fill="Gray">
                    </Ellipse>
                    <Ellipse
                        Visibility="{Binding IgnitionIsOn, Converter={StaticResource booleanToVisibilityConverter}}"
                        Fill="LawnGreen">
                    </Ellipse>
                </Grid>
                <!--<Slider 
                    Height="20" 
                    VerticalAlignment="Bottom"
                    Minimum="0"
                    Maximum="100" 
                    Name="SLD"
                    ValueChanged="Slider_ValueChanged"/>-->
            </Grid>
            <!-- Part 4: Damages -->
            <Grid
                Visibility="{Binding IsVisible_Damages, Converter={StaticResource booleanToVisibilityConverter}}"
                Background="Black"
                Width="256"
                Margin="20,0,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <customControls:DamageItemView 
                        Grid.Row="0"
                        Grid.Column="0"
                        IsDamaged="{Binding DamageItem_EngineOverheat.IsDamaged}"
                        ItemDamageColor="Red"
                        Source="{StaticResource image_isEngineOverheat}" />
                    <customControls:DamageItemView 
                        Grid.Row="0"
                        Grid.Column="1"
                        IsDamaged="{Binding DamageItem_OilLowPressure.IsDamaged}"
                        ItemDamageColor="Red"
                        Source="{StaticResource image_isOilLowPressure}"/>
                    <customControls:DamageItemView 
                        Grid.Row="0"
                        Grid.Column="2"
                        IsDamaged="{Binding DamageItem_EngineDamaged.IsDamaged}"
                        ItemDamageColor="OrangeRed"
                        Source="{StaticResource image_isEngineDamaged}"/>
                    <customControls:DamageItemView 
                        Grid.Row="1"
                        Grid.Column="0"
                        IsDamaged="{Binding DamageItem_HeadLightsOn.IsDamaged}"
                        ItemDamageColor="LightSkyBlue"
                        Source="{StaticResource image_isHeadLightsOn}"/>
                    <customControls:DamageItemView 
                        Grid.Row="1"
                        Grid.Column="1"
                        IsDamaged="{Binding DamageItem_AccumLowPower.IsDamaged}"
                        ItemDamageColor="Red"
                        Source="{StaticResource image_isAccumLowPower}"/>
                </Grid>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
